<templates xml:space="preserve">
  <t t-name="test.TestModelTemplate">
    <div class="oe_structure container my-4">
      <div class="card shadow-sm">
        <div class="card-body">
<<<<<<< HEAD
          <h2 class="card-title mb-4 text-primary">üìã Danh s√°ch test Records</h2>

          <!-- Form nh·∫≠p -->
          <div class="d-flex gap-2 flex-wrap mb-3">
            <input t-model="state.newName"
                   type="text"
                   class="form-control flex-grow-1"
                   placeholder="Nh·∫≠p t√™n m·ªõi"/>
            <input t-model="state.newTitle"
                    type="text"
                    class="form-control flex-grow-1"
                    placeholder="Nh·∫≠p m√¥ t·∫£"/>
            <button class="btn btn-primary" t-on-click="addTest">‚ûï Th√™m</button>
          </div>

=======
          <!-- Title -->
          <h2 class="card-title mb-4 text-primary text-center fw-bold display-5">
            üìã Danh s√°ch test Records
          </h2>
          
          <!-- Thanh l·ªçc 1 d√≤ng: Select | Input | Button -->
          <!-- V√πng l·ªçc t·ªïng -->
          <div class="d-flex justify-content-center my-4">
            <div class="d-flex w-75 gap-3">

              <!-- Dropdown field -->
              <div class="dropdown">
                <button class="btn btn-outline-secondary dropdown-toggle btn-lg"
                        data-bs-toggle="dropdown"
                        aria-expanded="false">
                  <t t-esc="state.filterField"/>
                </button>
                <ul class="dropdown-menu">
                  <li><a class="dropdown-item" href="#" t-on-click="() => this.setFilterField('name')">name</a></li>
                  <li><a class="dropdown-item" href="#" t-on-click="() => this.setFilterField('title')">title</a></li>
                </ul>
              </div>

              <!-- √î nh·∫≠p t·ª´ kh√≥a (chi·∫øm 100% c√≤n l·∫°i) -->
              <input type="text"
                    class="form-control form-control-lg flex-grow-1"
                    placeholder="Nh·∫≠p t·ª´ kh√≥a t√¨m ki·∫øm..."
                    t-model="state.filterValue"/>

              <!-- N√∫t t√¨m -->
              <button class="btn btn-primary btn-lg"
                      t-on-click="applyFilters">üîç</button>
            </div>
          </div>


          <!-- N√∫t t·∫°o m·ªõi -->
          <div class="mb-3 d-flex justify-content-between">
            <button class="btn btn-primary" 
                    t-on-click="openCreateModal">‚ûï T·∫°o m·ªõi</button>
            <button class="btn btn-danger"
                    t-on-click="() => this.deleteSelected()"
                    t-att-disabled="state.selectedIds.size === 0">üóë X√≥a ƒë√£ ch·ªçn</button>
          </div>
          

>>>>>>> a7a2e8c (feature: save state)
          <!-- Danh s√°ch items -->
          <t t-if="state.items.length">
            <ul class="list-group mb-3">
                <t t-foreach="state.items" t-as="item" t-key="item.id">
                  <li class="list-group-item d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center gap-2">
<<<<<<< HEAD
                    <!-- Left side: Checkbox + Info -->
                    <div class="form-check d-flex flex-column">
                      <div class="d-flex align-items-center">
                        <input class="form-check-input me-2"
                              type="checkbox"
                              t-on-click="() => this.toggleSelection(item.id)"
                              t-att-checked="state.selectedIds.has(item.id)"/>
                        <label class="form-check-label fw-semibold mb-0">
                          <t t-esc="item.name"/>
                        </label>
                      </div>
                      <small class="text-muted ms-4">
                        <t t-esc="item.title"/>
                      </small>
                    </div>
                    <!-- Right side: Action buttons -->
=======
                    
                    <!-- Hi·ªÉn th·ªã 1 item  -->
                    <div class="d-flex align-items-start gap-3">
                      
                      <!-- ·∫¢nh ƒë·∫°i di·ªán (n·∫øu c√≥), h√¨nh tr√≤n -->
                      <t t-if="item.image">
                        <img t-att-src="'data:image/png;base64,' + item.image"
                            class="rounded-circle"
                            style="width: 48px; height: 48px; object-fit: cover; border: 1px solid #ddd;"/>
                      </t>
                      <t t-if="!item.image">
                        <div style="width: 48px; height: 48px; border-radius: 50%; background-color: #ccc;"></div>
                      </t>

                      <!-- Th√¥ng tin: checkbox, name, title -->
                      <div class="form-check d-flex flex-column">
                        <div class="d-flex align-items-center">
                          <input class="form-check-input me-2"
                                type="checkbox"
                                t-on-click="() => this.toggleSelection(item.id)"
                                t-att-checked="state.selectedIds.has(item.id)"/>
                          <label class="form-check-label fw-semibold mb-0">
                            <t t-esc="item.name"/>
                          </label>
                        </div>
                        <small class="text-muted ms-4">
                          <t t-esc="item.title"/>
                        </small>
                      </div>

                    </div>


                    <!-- B√™n ph·∫£i: C√°c n√∫t thao t√°c -->
>>>>>>> a7a2e8c (feature: save state)
                    <div class="d-flex gap-2">
                      <button class="btn btn-sm btn-outline-info"
                              t-on-click="() => this.viewDetail(item.id)">üëÅ Xem</button>
                      <button class="btn btn-sm btn-outline-secondary"
<<<<<<< HEAD
                              t-on-click="() => this.editTest(item)">‚úèÔ∏è S·ª≠a</button>
=======
                              t-on-click="() => this.openEditModal(item.id)">‚úèÔ∏è S·ª≠a</button>
>>>>>>> a7a2e8c (feature: save state)
                    </div>
                  </li>
                </t>
            </ul>
<<<<<<< HEAD

            <button class="btn btn-danger"
                    t-on-click="() => this.deleteSelected()"
                    t-att-disabled="state.selectedIds.size === 0">üóë X√≥a ƒë√£ ch·ªçn</button>
          </t>

=======
          </t>

          <!-- Pagination -->
          <div class="d-flex justify-content-center">
            <ul class="pagination pagination-lg mb-0">
              <!-- N√∫t ¬´ v·ªÅ trang tr∆∞·ªõc -->
              <li t-att-class="state.page === 1 ? 'page-item disabled' : 'page-item'">
                <a href="#" class="page-link" t-on-click="() => this.goToPage(state.page - 1)">¬´</a>
              </li>

              <t t-set="totalPages" t-value="Math.ceil(state.total / state.pageSize)"/>
              <t t-set="maxPages" t-value="5"/>
              <t t-set="startPage"
                t-value="Math.max(1, Math.min(state.page - 2, totalPages - maxPages + 1))"/>
              <t t-set="endPage"
                t-value="Math.min(startPage + maxPages - 1, totalPages)"/>

              <!-- Danh s√°ch c√°c trang ƒë∆∞·ª£c hi·ªÉn th·ªã -->
              <t t-foreach="Array.from({length: endPage - startPage + 1}, (_, i) => startPage + i)" t-as="p" t-key="p">
                <li t-att-class="p === state.page ? 'page-item active' : 'page-item'">
                  <a href="#" class="page-link" t-on-click="() => this.goToPage(p)">
                    <t t-esc="p"/>
                  </a>
                </li>
              </t>

              <!-- N√∫t ¬ª t·ªõi trang ti·∫øp -->
              <li t-att-class="state.page === totalPages ? 'page-item disabled' : 'page-item'">
                <a href="#" class="page-link" t-on-click="() => this.goToPage(state.page + 1)">¬ª</a>
              </li>
            </ul>
          </div>

>>>>>>> a7a2e8c (feature: save state)
          <!-- N·∫øu kh√¥ng c√≥ b·∫£n ghi -->
          <t t-if="!state.items.length">
            <p class="text-muted">Kh√¥ng c√≥ b·∫£n ghi n√†o.</p>
          </t>
<<<<<<< HEAD
=======

          <!-- Modal Chi ti·∫øt -->
          <div t-if="state.showModal"
              class="modal d-block"
              tabindex="-1"
              style="background: rgba(0,0,0,0.5);">
            <div class="modal-dialog modal-dialog-centered">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title">Chi ti·∫øt</h5>
                  <button type="button" class="btn-close"
                          t-on-click="() => { state.showModal = false }"></button>
                </div>
                <div class="modal-body d-flex flex-column gap-3 align-items-center text-center">

                  <t t-if="state.detailItem.image">
                    <img t-att-src="'data:image/png;base64,' + state.detailItem.image"
                        style="width: 96px; height: 96px; border-radius: 50%; object-fit: cover; border: 1px solid #ccc;" />
                  </t>
                  <t t-if="!state.detailItem.image">
                    <div style="width: 96px; height: 96px; border-radius: 50%; background-color: #ccc;"></div>
                  </t>

                  <div>
                    <p><strong>T√™n:</strong> <t t-esc="state.detailItem.name"/></p>
                    <p><strong>M√¥ t·∫£:</strong> <t t-esc="state.detailItem.title"/></p>
                    <p><strong>Ng√†y t·∫°o:</strong> <t t-esc="state.detailItem.create_date"/></p>
                  </div>
                </div>
                <div class="modal-footer">
                  <button class="btn btn-secondary"
                          t-on-click="() => { state.showModal = false }">ƒê√≥ng</button>
                </div>
              </div>
            </div>
          </div>

          <!-- Modal ch·ªânh s·ª≠a -->
          <div t-if="state.isEditModal" class="modal d-block" tabindex="-1" style="background: rgba(0,0,0,0.5);">
            <div class="modal-dialog modal-dialog-centered">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title">Ch·ªânh s·ª≠a</h5>
                  <button type="button" class="btn-close" t-on-click="() => { state.isEditModal = false }"></button>
                </div>
                <div class="modal-body d-flex flex-column gap-3">
                  <label>T√™n</label>
                  <input type="text" class="form-control" t-model="state.editName"/>

                  <label>M√¥ t·∫£</label>
                  <textarea class="form-control" t-model="state.editTitle"></textarea>

                  <label>·∫¢nh m·ªõi (t√πy ch·ªçn)</label>
                  <input 
                    type="file" 
                    accept="image/*" 
                    class="form-control" 
                    t-on-change="(e) => this.handleImageChange(e, true)"/>
                </div>
                <div class="modal-footer">
                  <button class="btn btn-secondary" t-on-click="() => { state.isEditModal = false }">H·ªßy</button>
                  <button class="btn btn-primary" t-on-click="updateEditItem">L∆∞u</button>
                </div>
              </div>
            </div>
          </div>

          <!-- Modal T·∫°o m·ªõi -->
          <div t-if="state.isCreateModal" class="modal d-block" style="background: rgba(0,0,0,0.5);">
            <div class="modal-dialog modal-dialog-centered">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title">T·∫°o m·ªõi</h5>
                  <button type="button" class="btn-close" t-on-click="closeCreateModal"></button>
                </div>
                <div class="modal-body d-flex flex-column gap-3">
                  <label>T√™n</label>
                  <input type="text" class="form-control" t-model="state.newName" />

                  <label>M√¥ t·∫£</label>
                  <textarea class="form-control" t-model="state.newTitle"></textarea>

                  <label>H√¨nh ·∫£nh (t√πy ch·ªçn)</label>
                  <input type="file" accept="image/*" class="form-control"
                         t-on-change="(e) => this.handleImageChange(e)" />
                </div>
                <div class="modal-footer">
                  <button class="btn btn-secondary" t-on-click="closeCreateModal">H·ªßy</button>
                  <button class="btn btn-primary" t-on-click="addTest">L∆∞u</button>
                </div>
              </div>
            </div>
          </div>

>>>>>>> a7a2e8c (feature: save state)
        </div>
      </div>
    </div>
  </t>
</templates>

